/**
 * PR2.java class creates a Lift object and a the lift GUI for the user interaction with the Lift object
 * @Basic lift object created by Luis Dall, all GUI components and created by Tracy Devault, Error handling created by Stephen Blackburn
 */

import java.io.*;
import java.awt.event.*;

public class PR2 extends javax.swing.JFrame {

    FromText database = new FromText();

    public void updatePR2()
    {
        String thisLine;
        database.liftData.clear();
        database.wodData.clear();
        lift.removeAllItems();
        wod.removeAllItems();
            try {
                BufferedReader bufIn = new BufferedReader(new FileReader("master.txt"));

                while ((thisLine = bufIn.readLine()) != null) {
                    if (thisLine.trim().length() != 0) {
                        try {
                            database.FromText(thisLine);
                        } catch (IllegalFormat iee) {
                            System.out.println(iee.getMessage());
                            fromBackUp();
                        }
                    }

                }
            } catch (IOException ioe) {
                fromBackUp();
            }
            //donot use index 0 of 2 lists
            lift.addItem("Lifts");
            wod.addItem("WODs");   
           
        for (Lift liftData : database.liftData) {
            lift.addItem(liftData.getLiftName());
        }

        for (WOD wodData : database.wodData) {
            wod.addItem(wodData.getWodName());
        }
       
    }
    
    // reads data fom backup.txt file for error handling
    public void fromBackUp()
    {

            String thisLine;
            try {
                BufferedReader bufIn = new BufferedReader(new FileReader("backup.txt"));

                while ((thisLine = bufIn.readLine()) != null) {
                    if (thisLine.trim().length() != 0) {
                        try {
                            database.FromText(thisLine);
                        } catch (IllegalFormat iee) {
                            System.out.println(iee.getMessage());
                        }
                    }

                }
            } catch (IOException ioe) {
            }

           lift.addItem("Lifts");
            wod.addItem("WODs");
            
        for (Lift liftData : database.liftData) {
            String liftCopy = liftData.getLiftName();
            lift.addItem(liftCopy);
        }

        for (WOD wodData : database.wodData) {
            String wodCopy = wodData.getWodName();
            wod.addItem(wodCopy);
        }

    }

    public PR2() {
        initComponents();
        updatePR2();  
    }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pr2 = new javax.swing.JLabel();
        lift = new javax.swing.JComboBox();
        wod = new javax.swing.JComboBox();
        close = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("PR2");
        setBounds(new java.awt.Rectangle(300, 200, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        pr2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        pr2.setText("<html>PR<sup>2");

        lift.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                liftItemStateChanged(evt);
            }
        });

        wod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                wodItemStateChanged(evt);
            }
        });

        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lift, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(wod, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addComponent(close)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pr2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(pr2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(wod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addComponent(close)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        database.toTextFile();
        
        this.dispose();       
    }//GEN-LAST:event_closeActionPerformed

  //Calling Lift GUI
//GEN-FIRST:event_liftItemStateChanged
    private void liftItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        if((evt.getStateChange() == ItemEvent.SELECTED) && lift.getSelectedIndex() != 0){
            Object selectedItem = lift.getSelectedItem();        
            Lift liftf = new Lift(selectedItem.toString()); 
            liftf.liftParent = this;
            liftf.ft = database;
            database.toBackupFile();
            this.setEnabled(false);
            liftf.setVisible(true);
        } 
    }//GEN-LAST:event_liftItemStateChanged

    //calling WOD GUI
    private void wodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_wodItemStateChanged
        // TODO add your handling code here:
        if((evt.getStateChange() == ItemEvent.SELECTED)&& wod.getSelectedIndex() != 0){
        Object selectedItem = wod.getSelectedItem();        
            WOD wodf = new WOD(selectedItem.toString()); 
            wodf.wodParent = this;
            wodf.ft = database;
            database.toBackupFile();
            this.setEnabled(false);
            wodf.setVisible(true);
        }
    }//GEN-LAST:event_wodItemStateChanged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        updatePR2();
        lift.setSelectedIndex(0);
        wod.setSelectedIndex(0);
    }//GEN-LAST:event_formWindowActivated

   

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PR2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PR2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PR2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PR2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PR2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton close;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox lift;
    private javax.swing.JLabel pr2;
    private javax.swing.JComboBox wod;
    // End of variables declaration//GEN-END:variables
}
